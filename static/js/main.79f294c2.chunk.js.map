{"version":3,"sources":["components/Searchbar/Searchbar.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/App/App.jsx","services/fetch-services.js","index.js"],"names":["Searchbar","state","value","handlerSearch","e","setState","currentTarget","handlerSubmit","preventDefault","props","onSubmit","className","this","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","tags","id","handlerItemClick","onClick","src","alt","ImageGallery","top","list","map","el","indx","key_id","Button","isOff","disabled","visible","color","height","width","modalContainer","document","querySelector","Modal","handleKeyDown","code","onClose","handleBackdropClick","target","window","addEventListener","removeEventListener","createPortal","children","fetchService","searchQuery","pageNumber","currentCount","perPage","axios","request","baseURL","params","image_type","orientation","q","page","per_page","key","response","data","hits","totalHits","fetchData","shortid","require","App","images","showModal","isLoading","currentImg","totalImgs","search","scrollTo","then","generate","catch","console","log","finally","handleLoadMore","HeightBeforeRender","documentElement","scrollHeight","nextDataPortion","prevState","handlerScrollTo","toggleModal","current","find","largeImageURL","renderedContentHeight","behavior","isButtonVisible","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.79f294c2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { Component } from 'react';\nimport './Searchbar.css';\n\nclass Searchbar extends Component {\n  state = { value: '' };\n  handlerSearch = e => {\n    this.setState({ value: e.currentTarget.value });\n  };\n  handlerSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state.value);\n  };\n  render() {\n    return (\n      <header className=\"Searchbar\">\n        <form className=\"SearchForm\" onSubmit={this.handlerSubmit}>\n          <button type=\"submit\" className=\"SearchForm-button\">\n            <span className=\"SearchForm-button-label\">Search</span>\n          </button>\n\n          <input\n            className=\"SearchForm-input\"\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            value={this.state.value}\n            onChange={this.handlerSearch}\n          />\n        </form>\n      </header>\n    );\n  }\n}\nSearchbar.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\nexport default Searchbar;\n","import PropTypes from 'prop-types';\nimport './ImageGalleryItem.css';\n\nconst ImageGalleryItem = ({ webformatURL, tags, id, handlerItemClick }) => {\n  return (\n    <li\n      className=\"ImageGalleryItem\"\n      onClick={() => {\n        handlerItemClick(id);\n      }}\n    >\n      <img src={webformatURL} alt={tags} className=\"ImageGalleryItem-image\" />\n    </li>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  handlerItemClick: PropTypes.func.isRequired,\n  webformatURL: PropTypes.string.isRequired,\n  tags: PropTypes.string.isRequired,\n  id: PropTypes.number.isRequired,\n};\nexport default ImageGalleryItem;\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './ImageGallery.css';\nimport ImageGalleryItem from '../../components/ImageGalleryItem';\n\nclass ImageGallery extends Component {\n  state = { top: 0 };\n\n  render() {\n    const { list, handlerItemClick } = this.props;\n    return (\n      <ul className=\"ImageGallery\">\n        {list.map((el, indx) => (\n          <ImageGalleryItem\n            key={el.key_id}\n            webformatURL={el.webformatURL}\n            tags={el.tags}\n            id={el.id}\n            handlerItemClick={handlerItemClick}\n          />\n        ))}\n      </ul>\n    );\n  }\n}\nImageGallery.propTypes = {\n  list: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      webformatURL: PropTypes.string.isRequired,\n      tags: PropTypes.string.isRequired,\n    }),\n  ),\n  handlerItemClick: PropTypes.func.isRequired,\n};\nexport default ImageGallery;\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport './Button.css';\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\nimport Spinner from 'react-loader-spinner';\n\nclass Button extends Component {\n  render() {\n    const { isOff, onClick } = this.props;\n    return (\n      <button\n        disabled={isOff}\n        className=\"Button\"\n        type=\"button\"\n        onClick={onClick}\n      >\n        {!isOff && 'Load more . . .'}\n        <Spinner\n          visible={isOff}\n          type=\"ThreeDots\"\n          color=\"#FFF\"\n          height={19}\n          width={69}\n        />\n      </button>\n    );\n  }\n}\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  isOff: PropTypes.bool.isRequired,\n};\n\nexport default Button;\n","import React, { Component } from 'react';\nimport { createPortal } from 'react-dom';\nimport PropTypes from 'prop-types';\nimport './Modal.css';\nconst modalContainer = document.querySelector('#modal-root');\n\nclass Modal extends Component {\n  componentDidMount() {\n    window.addEventListener('keydown', this.handleKeyDown);\n  }\n  componentWillUnmount() {\n    window.removeEventListener('keydown', this.handleKeyDown);\n  }\n  handleKeyDown = e => {\n    if (e.code === 'Escape') {\n      this.props.onClose();\n    }\n  };\n\n  handleBackdropClick = e => {\n    if (e.target === e.currentTarget) {\n      this.props.onClose();\n    }\n  };\n  render() {\n    return createPortal(\n      <div className=\"Overlay\" onClick={this.handleBackdropClick}>\n        <div className=\"Modal\">{this.props.children}</div>\n      </div>,\n      modalContainer,\n    );\n  }\n}\nModal.propTypes = {\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node.isRequired,\n};\nexport default Modal;\n","import { Component } from 'react';\n\nimport Searchbar from '../../components/Searchbar';\nimport ImageGallery from '../../components/ImageGallery';\nimport Button from '../../components/Button';\nimport Modal from '../../components/Modal';\n\nimport './App.css';\n\nimport FetchService from '../../services/fetch-services';\nconst fetchService = new FetchService();\nconst shortid = require('shortid');\n\nclass App extends Component {\n  state = {\n    images: [],\n    showModal: false,\n    isLoading: false,\n    currentImg: { src: '', alt: '' },\n    totalImgs: 0,\n  };\n\n  handlerSubmit = search => {\n    window.scrollTo(0, 0);\n    this.setState({ isLoading: true });\n    fetchService.searchQuery = search;\n    fetchService.pageNumber = 1;\n    fetchService.currentCount = 0;\n    fetchService\n      .fetchData()\n      .then(data => {\n        const images = data.hits.map(el => ({\n          ...el,\n          key_id: shortid.generate(),\n        }));\n        this.setState({ images: [...images], totalImgs: data.totalHits });\n      })\n      .catch(console.log)\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  handleLoadMore = () => {\n    const HeightBeforeRender = document.documentElement.scrollHeight;\n    this.setState({ isLoading: true });\n    fetchService\n      .nextDataPortion()\n      .then(data => {\n        this.setState(prevState => {\n          const images = data.hits.map(el => ({\n            ...el,\n            key_id: shortid.generate(),\n          }));\n          return { images: [...prevState.images, ...images] };\n        });\n      })\n      .catch(console.log)\n      .then(() => {\n        this.handlerScrollTo(HeightBeforeRender);\n      })\n      .finally(() => {\n        this.setState({ isLoading: false });\n      });\n  };\n\n  handlerItemClick = id => {\n    this.toggleModal();\n    const current = this.state.images.find(el => el.id === id);\n    this.setState({\n      currentImg: { src: current.largeImageURL, alt: current.tags },\n    });\n  };\n  handlerScrollTo = height => {\n    const searchElementHeight = 70;\n    const buttonLoadmoreHeight = 80;\n    const renderedContentHeight =\n      document.documentElement.scrollHeight - height;\n    const scrollTo =\n      document.documentElement.scrollHeight - renderedContentHeight;\n    window.scrollTo({\n      top: scrollTo - (searchElementHeight + buttonLoadmoreHeight),\n      behavior: 'smooth',\n    });\n  };\n  toggleModal = () => {\n    this.setState(prevState => ({ showModal: !prevState.showModal }));\n  };\n\n  render() {\n    const { images, isLoading, currentImg, totalImgs, showModal } = this.state;\n    const isButtonVisible =\n      images.length > 0 && fetchService.currentCount < totalImgs && !isLoading;\n    return (\n      <div className=\"App\">\n        <Searchbar onSubmit={this.handlerSubmit} />\n        <ImageGallery list={images} handlerItemClick={this.handlerItemClick} />\n\n        {isButtonVisible ? (\n          <Button isOff={false} onClick={this.handleLoadMore} />\n        ) : (\n          isLoading && <Button isOff={true} onClick={this.handleLoadMore} />\n        )}\n        {showModal && (\n          <Modal onClose={this.toggleModal}>\n            <img src={currentImg.src} alt={currentImg.alt} />\n          </Modal>\n        )}\n      </div>\n    );\n  }\n}\nexport default App;\n","import axios from 'axios';\nconst API_KEY = '18927781-76591304de9a35a1d49e108a5';\nconst BASE_URL = 'https://pixabay.com/api/';\n\nexport default class FetchService {\n  constructor() {\n    this.searchQuery = '';\n    this.pageNumber = 1;\n    this.currentCount = 0;\n    this.perPage = 12;\n  }\n\n  async fetchData() {\n    try {\n      const response = await axios.request({\n        baseURL: `${BASE_URL}`,\n        params: {\n          image_type: 'photo',\n          orientation: 'horizontal',\n          q: this.searchQuery,\n          page: this.pageNumber,\n          per_page: this.perPage,\n          key: API_KEY,\n        },\n      });\n      const { hits, totalHits } = response.data;\n      return { hits, totalHits };\n    } catch (error) {\n      throw error;\n    }\n  }\n\n  async nextDataPortion() {\n    this.pageNumber += 1;\n    this.currentCount = this.pageNumber * this.perPage;\n    return this.fetchData();\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}